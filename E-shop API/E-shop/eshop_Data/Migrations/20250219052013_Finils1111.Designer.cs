// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eshop_Data.Contcrete.Context;

#nullable disable

namespace eshop_Data.Migrations
{
    [DbContext(typeof(EshopDbContext))]
    [Migration("20250219052013_Finils1111")]
    partial class Finils1111
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            RoleId = "115c7796-cfac-44de-91b5-916eaae125b5"
                        },
                        new
                        {
                            UserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            RoleId = "811f466c-9d06-43f8-a054-24aedbb4161b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "115c7796-cfac-44de-91b5-916eaae125b5",
                            Description = "Administrator role",
                            Name = "AdminUser",
                            NormalizedName = "ADMINUSER"
                        },
                        new
                        {
                            Id = "811f466c-9d06-43f8-a054-24aedbb4161b",
                            Description = "Regular user role",
                            Name = "NormalUser",
                            NormalizedName = "NORMALUSER"
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            AccessFailedCount = 0,
                            Address = "",
                            City = "",
                            ConcurrencyStamp = "11feac47-7da3-474e-a0d5-023708fdc177",
                            DateOfBirth = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(9140),
                            Email = "adminuser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMINUSER@GMAIL.COM",
                            NormalizedUserName = "ADMINUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFW0EluYZ6aYsN7AJSYcSF3hI2dNRyo7W9VBc5JKdqF8IffIn4GwuU1ATGdKMCOgCA==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "989fe26a-c265-4ed6-89ea-0f9bc7436cc7",
                            TwoFactorEnabled = false,
                            UserName = "adminuser@gmail.com"
                        },
                        new
                        {
                            Id = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            AccessFailedCount = 0,
                            Address = "",
                            City = "",
                            ConcurrencyStamp = "37f9e60e-8699-49cd-9fbc-081429d040fc",
                            DateOfBirth = new DateTime(2025, 2, 19, 8, 20, 12, 676, DateTimeKind.Local).AddTicks(9945),
                            Email = "normaluser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Normal",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORMALUSER@GMAIL.COM",
                            NormalizedUserName = "NORMALUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMWw6yk/u190U2COOoV5dhJSUPbHzA75N0sEuYYNfjUm+SiLTW49MxGKf4aEwHPL1A==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c918fee9-6799-470e-8560-8772f80f7f41",
                            TwoFactorEnabled = false,
                            UserName = "normaluser@gmail.com"
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Baskets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 720, DateTimeKind.Local).AddTicks(9911),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 720, DateTimeKind.Local).AddTicks(9927),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8580),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elektronik",
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8593),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mobil Cihazlar",
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8594),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Televizyonlar",
                            isActive = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8595),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bilgisayarlar",
                            isActive = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8596),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aksesuarlar",
                            isActive = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8597),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple",
                            isActive = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8598),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung",
                            isActive = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8599),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LG",
                            isActive = true
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8600),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Huawei",
                            isActive = true
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8601),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony",
                            isActive = true
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8602),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lenovo",
                            isActive = true
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8603),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dell",
                            isActive = true
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8604),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi",
                            isActive = true
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8605),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Akıllı Saatler",
                            isActive = true
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8606),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tabletler",
                            isActive = true
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8607),
                            Description = "",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ana Sayfa",
                            isActive = true
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Coupon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "MERHABA20",
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 720, DateTimeKind.Local).AddTicks(9950),
                            DiscountPercentage = 20,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            Code = "INDIRIM10",
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 720, DateTimeKind.Local).AddTicks(9952),
                            DiscountPercentage = 10,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            Code = "HOŞGELDIN15",
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 720, DateTimeKind.Local).AddTicks(9953),
                            DiscountPercentage = 15,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 130,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 0,
                            TotalAmount = 0m,
                            isActive = true
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 230,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(9021),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 130,
                            ProductId = 50,
                            Quantity = 1,
                            UnitPrice = 89.99m,
                            isActive = true
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CVV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("cardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cardUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8720),
                            ImageUrl = "/images/product-1.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPhone 14",
                            Price = 999.99m,
                            Properties = "Apple iPhone 14, 128GB, Siyah, 6.1 inch ekran, A15 Bionic chip ile yüksek performans.",
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8728),
                            ImageUrl = "/images/product-2.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy S23",
                            Price = 899.99m,
                            Properties = "Samsung Galaxy S23, 128GB, Beyaz, 6.2 inch ekran, 50MP ana kamera ile mükemmel fotoğraflar.",
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8729),
                            ImageUrl = "/images/product-3.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LG OLED TV",
                            Price = 1299.99m,
                            Properties = "LG 55in OLED TV, 4K, Ultra HD, OLED ekran teknolojisi ile mükemmel renk ve kontrast.",
                            isActive = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8731),
                            ImageUrl = "/images/product-4.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony Bravia 65",
                            Price = 1799.99m,
                            Properties = "Sony Bravia 65in 4K TV, Akıllı TV özellikleri, Android işletim sistemi ve Google Assistant desteği.",
                            isActive = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8733),
                            ImageUrl = "/images/product-5.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple MacBook Pro",
                            Price = 2399.99m,
                            Properties = "Apple MacBook Pro, 16GB RAM, 512GB SSD, M1 Pro chip ile yüksek performanslı ve taşınabilir dizüstü.",
                            isActive = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8735),
                            ImageUrl = "/images/product-6.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy Tab S8",
                            Price = 649.99m,
                            Properties = "Samsung Galaxy Tab S8, 128GB, 11 inç ekran, S Pen desteği ile verimli kullanım için ideal tablet.",
                            isActive = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8736),
                            ImageUrl = "/images/product-7.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dell XPS 13",
                            Price = 1199.99m,
                            Properties = "Dell XPS 13, 16GB RAM, 512GB SSD, İnce tasarımı ve 13 inç 4K ekranıyla taşınabilirlik ve güç bir arada.",
                            isActive = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8738),
                            ImageUrl = "/images/product-8.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Huawei MateBook X",
                            Price = 1599.99m,
                            Properties = "Huawei MateBook X, 16GB RAM, 512GB SSD, 13 inç ekran, ince ve hafif yapısıyla mükemmel mobilite.",
                            isActive = true
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8739),
                            ImageUrl = "/images/product-9.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi Mi 11",
                            Price = 599.99m,
                            Properties = "Xiaomi Mi 11, 128GB, Siyah, Snapdragon 888 işlemci, 108MP ana kamera ile ultra yüksek çözünürlük.",
                            isActive = true
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8767),
                            ImageUrl = "/images/product-10.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lenovo ThinkPad X1",
                            Price = 1499.99m,
                            Properties = "Lenovo ThinkPad X1, 16GB RAM, 512GB SSD, 14 inç ekran, dayanıklı tasarım ve güçlü performans.",
                            isActive = true
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8769),
                            ImageUrl = "/images/product-11.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple AirPods Pro",
                            Price = 249.99m,
                            Properties = "Apple AirPods Pro, aktif gürültü engelleme özelliği, üstün ses kalitesi ve Apple ekosistemiyle uyumlu.",
                            isActive = true
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8771),
                            ImageUrl = "/images/product-12.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy Watch 5",
                            Price = 299.99m,
                            Properties = "Samsung Galaxy Watch 5, Akıllı saat, 40mm ekran, spor ve sağlık takibi, 2 gün batarya süresi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8772),
                            ImageUrl = "/images/product-13.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LG 27GL850-B Monitor",
                            Price = 349.99m,
                            Properties = "LG 27in QHD IPS Monitör, 144Hz yenileme hızı, NVIDIA G-Sync uyumluluğu ile oyun için ideal.",
                            isActive = true
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8774),
                            ImageUrl = "/images/product-14.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony WH-1000XM5",
                            Price = 349.99m,
                            Properties = "Sony WH-1000XM5, Kablosuz kulaklık, mükemmel ses yalıtımı, 30 saat pil ömrü ve rahat kullanım.",
                            isActive = true
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8775),
                            ImageUrl = "/images/product-15.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Huawei P50 Pro",
                            Price = 899.99m,
                            Properties = "Huawei P50 Pro, 256GB, 50MP dörtlü kamera, 6.6 inç OLED ekran, mükemmel fotoğraf ve video çekimi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8776),
                            ImageUrl = "/images/product-16.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPad Pro 12.9",
                            Price = 1099.99m,
                            Properties = "iPad Pro 12.9, 128GB, M1 chip, 12.9 inç Liquid Retina ekran, çizim ve medya düzenleme için ideal.",
                            isActive = true
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8778),
                            ImageUrl = "/images/product-17.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple Watch Series 7",
                            Price = 399.99m,
                            Properties = "Apple Watch Series 7, 41mm ekran, giyilebilir sağlık ve fitness takibi, su geçirmez özellik.",
                            isActive = true
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8780),
                            ImageUrl = "/images/product-18.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung QLED 65in TV",
                            Price = 1499.99m,
                            Properties = "Samsung 65in QLED TV, 4K, Quantum Dot teknolojisi ile renkleri daha parlak ve canlı.",
                            isActive = true
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8781),
                            ImageUrl = "/images/product-19.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi Mi 10",
                            Price = 699.99m,
                            Properties = "Xiaomi Mi 10, 128GB, Snapdragon 865 işlemci, 108MP ana kamera, 6.67 inç AMOLED ekran.",
                            isActive = true
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8783),
                            ImageUrl = "/images/product-20.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony Xperia 1 II",
                            Price = 949.99m,
                            Properties = "Sony Xperia 1 II, 128GB, 6.5 inç 4K OLED ekran, sinematik video çekimleri için mükemmel.",
                            isActive = true
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8784),
                            ImageUrl = "/images/product-21.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple MacBook Air",
                            Price = 1099.99m,
                            Properties = "Apple MacBook Air, M1 chip, 8GB RAM, 256GB SSD, hafif ve ince dizüstü bilgisayar.",
                            isActive = true
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8785),
                            ImageUrl = "/images/product-22.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy Buds Pro",
                            Price = 199.99m,
                            Properties = "Samsung Galaxy Buds Pro, kablosuz kulaklık, aktif gürültü engelleme, üstün ses kalitesi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8787),
                            ImageUrl = "/images/product-23.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LG Gram 17",
                            Price = 1699.99m,
                            Properties = "LG Gram 17, 16GB RAM, 512GB SSD, 17 inç ekran, ultra hafif taşınabilir dizüstü bilgisayar.",
                            isActive = true
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8788),
                            ImageUrl = "/images/product-24.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony Alpha 7 III",
                            Price = 2199.99m,
                            Properties = "Sony Alpha 7 III, 24.2MP, 4K video çekimi, profesyonel fotoğraf makineleri.",
                            isActive = true
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8789),
                            ImageUrl = "/images/product-25.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple iPad Mini",
                            Price = 499.99m,
                            Properties = "Apple iPad Mini, 8.3 inç ekran, A15 Bionic chip, taşınabilir ve güçlü tablet.",
                            isActive = true
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8791),
                            ImageUrl = "/images/product-26.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Huawei FreeBuds Pro",
                            Price = 179.99m,
                            Properties = "Huawei FreeBuds Pro, kablosuz kulaklık, aktif gürültü engelleme ve yüksek ses kalitesi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8792),
                            ImageUrl = "/images/product-27.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi Mi Band 6",
                            Price = 44.99m,
                            Properties = "Xiaomi Mi Band 6, Akıllı bileklik, 1.56 inç AMOLED ekran, spor takibi ve fitness özellikleri.",
                            isActive = true
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8794),
                            ImageUrl = "/images/product-28.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung 970 EVO Plus SSD",
                            Price = 149.99m,
                            Properties = "Samsung 970 EVO Plus, 1TB SSD, NVMe M.2, ultra hızlı veri transferi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8795),
                            ImageUrl = "/images/product-29.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lenovo Legion 5",
                            Price = 1399.99m,
                            Properties = "Lenovo Legion 5, 16GB RAM, 512GB SSD, 15.6 inç 144Hz ekran, güçlü oyun laptopu.",
                            isActive = true
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8796),
                            ImageUrl = "/images/product-30.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dell Alienware X17",
                            Price = 2499.99m,
                            Properties = "Dell Alienware X17, 32GB RAM, 1TB SSD, 17.3 inç 4K ekran, yüksek performanslı oyun bilgisayarı.",
                            isActive = true
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8798),
                            ImageUrl = "/images/product-31.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony PlayStation 5",
                            Price = 499.99m,
                            Properties = "Sony PlayStation 5, 825GB SSD, 4K oyun desteği, ultra hızlı performans.",
                            isActive = true
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8799),
                            ImageUrl = "/images/product-32.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple TV 4K",
                            Price = 179.99m,
                            Properties = "Apple TV 4K, 64GB, 4K HDR, Dolby Vision ve Dolby Atmos ile mükemmel görüntü ve ses.",
                            isActive = true
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8800),
                            ImageUrl = "/images/product-33.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Odyssey G7 Monitor",
                            Price = 799.99m,
                            Properties = "Samsung Odyssey G7, 27in QHD, 240Hz, 1ms tepki süresi ile oyun için en iyi ekran.",
                            isActive = true
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8802),
                            ImageUrl = "/images/product-34.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi Mi Robot Vacuum",
                            Price = 399.99m,
                            Properties = "Xiaomi Mi Robot Vakum, 2.5 saat pil ömrü, akıllı navigasyon, güçlü emiş gücü.",
                            isActive = true
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8804),
                            ImageUrl = "/images/product-35.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lenovo Smart Clock",
                            Price = 79.99m,
                            Properties = "Lenovo Smart Clock, Google Assistant ile akıllı saat, uyandırma alarmı ve diğer özellikler.",
                            isActive = true
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8805),
                            ImageUrl = "/images/product-36.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Huawei Watch GT 3",
                            Price = 249.99m,
                            Properties = "Huawei Watch GT 3, 46mm ekran, 14 güne kadar pil ömrü, fitness ve sağlık takibi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8806),
                            ImageUrl = "/images/product-37.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony Xperia 5 III",
                            Price = 1049.99m,
                            Properties = "Sony Xperia 5 III, 128GB, 6.1 inç OLED ekran, 120Hz yenileme hızı ve mükemmel video çekim özellikleri.",
                            isActive = true
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8808),
                            ImageUrl = "/images/product-38.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple iMac 24\" M1",
                            Price = 1299.99m,
                            Properties = "Apple iMac 24\" M1, 8GB RAM, 256GB SSD, parlak ve canlı renklerle tasarlanmış masaüstü bilgisayar.",
                            isActive = true
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8809),
                            ImageUrl = "/images/product-39.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy Note 20 Ultra",
                            Price = 1299.99m,
                            Properties = "Samsung Galaxy Note 20 Ultra, 256GB, 108MP ana kamera, 5G desteği ile hızlı bağlantı.",
                            isActive = true
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8811),
                            ImageUrl = "/images/product-40.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi Redmi Note 11 Pro",
                            Price = 249.99m,
                            Properties = "Xiaomi Redmi Note 11 Pro, 128GB, 6.67 inç AMOLED ekran, 108MP kamera.",
                            isActive = true
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8812),
                            ImageUrl = "/images/product-41.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lenovo Yoga 9i",
                            Price = 1899.99m,
                            Properties = "Lenovo Yoga 9i, 16GB RAM, 512GB SSD, 14 inç 4K ekran, dönüştürülebilir dizüstü bilgisayar.",
                            isActive = true
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8813),
                            ImageUrl = "/images/product-42.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple Magic Mouse",
                            Price = 79.99m,
                            Properties = "Apple Magic Mouse, kablosuz, çoklu dokunmatik yüzey, zarif ve kompakt tasarım.",
                            isActive = true
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8839),
                            ImageUrl = "/images/product-43.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony WH-XB900N",
                            Price = 249.99m,
                            Properties = "Sony WH-XB900N, Kablosuz kulaklık, ekstra bass özelliği ve gürültü engelleme.",
                            isActive = true
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8840),
                            ImageUrl = "/images/product-44.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple HomePod Mini",
                            Price = 99.99m,
                            Properties = "Apple HomePod Mini, Akıllı hoparlör, yüksek kaliteli ses ve Apple ekosistemine uyum.",
                            isActive = true
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8842),
                            ImageUrl = "/images/product-45.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung T7 Touch SSD",
                            Price = 149.99m,
                            Properties = "Samsung T7 Touch, 1TB SSD, parmak izi güvenliği, ultra hızlı veri transferi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8843),
                            ImageUrl = "/images/product-46.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi Mi 11 Lite",
                            Price = 369.99m,
                            Properties = "Xiaomi Mi 11 Lite, 128GB, Snapdragon 732G, 6.55 inç AMOLED ekran, ince ve şık tasarım.",
                            isActive = true
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8844),
                            ImageUrl = "/images/product-47.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lenovo IdeaPad Flex 5",
                            Price = 849.99m,
                            Properties = "Lenovo IdeaPad Flex 5, 8GB RAM, 512GB SSD, 14 inç ekran, dönüştürülebilir laptop.",
                            isActive = true
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8846),
                            ImageUrl = "/images/product-48.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony Bravia A80J",
                            Price = 2199.99m,
                            Properties = "Sony Bravia A80J, 65 inç OLED, 4K, Google TV ile akıllı özellikler ve mükemmel görüntü kalitesi.",
                            isActive = true
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8847),
                            ImageUrl = "/images/product-49.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple Pencil 2. Nesil",
                            Price = 129.99m,
                            Properties = "Apple Pencil 2. Nesil, iPad Pro ve iPad Air için hassas çizim ve not alma aracı.",
                            isActive = true
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8848),
                            ImageUrl = "/images/product-50.jpg",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy Z Fold 4",
                            Price = 1799.99m,
                            Properties = "Samsung Galaxy Z Fold 4, katlanabilir ekran, 12GB RAM, 512GB depolama alanı ile güçlü bir cihaz.",
                            isActive = true
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.ProductCategories", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8898),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8899),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8900),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8901),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8902),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8902),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8903),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8904),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8904),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8905),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8905),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8906),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8907),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8907),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8908),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8909),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8909),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8910),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8910),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8911),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8912),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8912),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8913),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8914),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8914),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8915),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8915),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8916),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 8,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8917),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8917),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8918),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8921),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8921),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 11,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8923),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8924),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8924),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8925),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8925),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8926),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8927),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8927),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8928),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8929),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8929),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8931),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 11,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8931),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8932),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8933),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8933),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8934),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 49,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8935),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        },
                        new
                        {
                            ProductId = 50,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 8, 20, 12, 633, DateTimeKind.Local).AddTicks(8935),
                            Id = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true
                        });
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutBannerPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutPhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutTextTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banner1Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banner2Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banner3Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactBannerPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterLogoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaUrl2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaUrl3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AboutBannerPath = "images/0f28bbb8-1897-43b0-aef1-0598efcfccc4.png",
                            AboutPhotoPath = "images/f3651d17-2c1e-4fe8-8bc6-9a4922a29043.png",
                            AboutText = "Biz, geniş ürün yelpazesi sunan lider bir e-ticaret şirketiyiz.",
                            AboutTextTitle = "Hakkımızda",
                            Banner1Path = "images/e809f6cf-8fd0-4217-bbd9-60b52dd0620c.png",
                            Banner2Path = "images/deb0b266-1e12-49d2-97ff-fd19c2ebb8b8.png",
                            Banner3Path = "images/232d72b1-c24c-41f0-bc0f-c396e0a16347.png",
                            ContactBannerPath = "images/eefaa8e9-e2b7-4cb8-85e1-345994ef9420.png",
                            FooterLogoPath = "images/9a0ca075-205b-439e-ac0e-6a607b52a09b.png",
                            FooterText = "All Rights Reserved.",
                            LogoPath = "images/18e44284-f31f-497b-81a1-62da2a31fea9.png",
                            MapLocation = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3022.073292073073!2d-73.9854286845949!3d40.74881797932569!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c2598f3f3b3b3f%3A0x1c3bb99243deb742!2sEmpire%20State%20Building!5e0!3m2!1str!2str!4v1640730000000!5m2!1str!2str",
                            SliderText = "E-ticaret sitemize hoş geldiniz! Sizin için en iyi ürünleri burada bulabilirsiniz.",
                            SocialMediaUrl = "https://www.facebook.com/",
                            SocialMediaUrl2 = "https://www.instagram.com/",
                            SocialMediaUrl3 = "https://www.twitter.com/"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eshop_Entity.Contcrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Basket", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.BasketItem", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eshop_Entity.Contcrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Comment", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eshop_Entity.Contcrete.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Order", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.OrderItem", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eshop_Entity.Contcrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.ProductCategories", b =>
                {
                    b.HasOne("eshop_Entity.Contcrete.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eshop_Entity.Contcrete.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Basket", b =>
                {
                    b.Navigation("BasketItems");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("eshop_Entity.Contcrete.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
