@model IEnumerable<OrderModel>
@using eshop_MVC.Helpers
<br />
<br />

<div class="container">
    <h1 class="text-center my-4 mt-5 text-primary">Tüm Siparişleriniz</h1>
    <div class="row justify-content-center mb-4">
        <div class="col-auto">
            <a href="/Order/GetShippedOrders" class="btn btn-outline-primary btn-lg mx-2 shadow-sm hover-shadow-lg">
                <i class="bi bi-truck"></i> Kargoya Verilen Siparişler
            </a>
        </div>
        <div class="col-auto">
            <a href="/Order/GetDeliveredOrders" class="btn btn-outline-success btn-lg mx-2 shadow-sm hover-shadow-lg">
                <i class="bi bi-box-seam"></i> Teslim Edilen Siparişler
            </a>
        </div>
    </div>

    <table class="table table-striped table-hover table-bordered shadow-sm">
        <thead class="table-dark">
            <tr>
                <th scope="col">Sipariş ID</th>
                <th scope="col">Toplam Fiyat</th>
                <th scope="col">Tarih</th>
                <th scope="col">Durum</th>
                <th scope="col">Detaylar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.TotalAmount.ToString("C")</td>
                    <td>@order.CreatedDate.ToShortDateString()</td>
                    <td>
                        <span class="badge @GetStatusBadge(order.OrderStatus)">@GetStatusText(order.OrderStatus)</span>
                    </td>
                    <td>
                        <a href="/Order/Details/@order.Id" class="btn btn-info btn-sm shadow-sm hover-shadow-lg">
                            <i class="bi bi-eye"></i> Detaylar
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />


@functions {
    private string GetStatusBadge(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-warning text-dark",
            OrderStatus.Processing => "bg-info text-dark",
            OrderStatus.Shipped => "bg-primary",
            OrderStatus.Delivered => "bg-success",
            OrderStatus.Cancelled => "bg-danger",
            OrderStatus.Returned => "bg-secondary",
            OrderStatus.Failed => "bg-dark",
            _ => "bg-light text-dark",
        };
    }

    private string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Beklemede",
            OrderStatus.Processing => "İşleniyor",
            OrderStatus.Shipped => "Kargoya Verildi",
            OrderStatus.Delivered => "Teslim Edildi",
            OrderStatus.Cancelled => "İptal Edildi",
            OrderStatus.Returned => "İade Edildi",
            OrderStatus.Failed => "Başarısız",
            _ => "Bilinmiyor",
        };
    }
}

<style>
    .hover-shadow-lg:hover {
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .table-striped tbody tr:nth-child(odd) {
        background-color: #f8f9fa;
    }

    .table-hover tbody tr:hover {
        background-color: #e9ecef;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .btn {
        transition: all 0.3s ease;
    }

        .btn:hover {
            transform: translateY(-2px);
        }

    .container {
        max-width: 1200px; /* Sayfa genişliğini sınırlama */
        margin: 0 auto;
    }

    .row.justify-content-center {
        display: flex;
        justify-content: center;
    }
</style>
